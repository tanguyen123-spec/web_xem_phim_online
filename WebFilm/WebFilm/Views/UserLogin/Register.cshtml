@model WebFilm.Models.XULY.RegisterUser
@using BotDetect.Web.Mvc;
<link href="@BotDetect.Web.CaptchaUrls.Absolute.LayoutStyleSheetUrl"
      rel="stylesheet" type="text/css" />

@{ MvcCaptcha registerCapcha = new MvcCaptcha("registerCapcha");
    registerCapcha.UserInputID = "CaptchaCode";}
@{
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}
@*Form đăng ký*@
<div class="content" style="margin-left:400px">
    <h2><strong>Đăng Ký Thành Viên</strong></h2>
    @using (Html.BeginForm("Register", "UserLogin", FormMethod.Post))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">

            <hr />
            <div class="form-group">

                @if (ViewBag.Success != null)
                {
                    <div class="alert alert-success">@ViewBag.Success</div>
                }
            </div>
            <div class="form-group">
                <div class="col-md-4">
                    @Html.ValidationSummary(false, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">

                @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.PasswordFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.PasswordFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                </div>
            </div>
            @*Mã xác thực*@
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    @Html.Captcha(registerCapcha)
                    @Html.TextBox("CaptchaCode")
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Đăng Ký" class="btn btn-default" />
                </div>
            </div>
        </div>
    }

</div>